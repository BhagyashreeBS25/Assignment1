pipeline {
    agent any
     options {
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '10')
}
    
 triggers {
  pollSCM '0 * * * *'
}
    tools {
        maven 'localmaven'
    }
 
    stages {
        stage('Build maven') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: 'GIT_Creds', url: 'https://github.com/BhagyashreeBS25/Assignment1.git']]])
                sh 'mvn -f my-app/pom.xml -Dmaven.test.failure.ignore=true clean package'
                
            }
            

            post {
                success {
                    echo "Now Archiving the Artifacts...."
                    archiveArtifacts artifacts: '**/*.jar'
                }
            }
        }
       
        
        stage('Build Docker Image') {
            steps {
                script {
                    sh 'docker build -t bhagyshree25/hello-world-1.0 ./my-app'
                }
            }
        }
        
        stage('push docker image'){
            steps {
                script {
                    withCredentials([string(credentialsId: 'dockerhub_cred', variable: 'dockerhub_creds')]) {
                        sh 'docker login -u bhagyshree25 -p ${dockerhub_creds}'
                        sh 'docker push bhagyshree25/hello-world-1.0'
                    }
                }
            }
        }  
        stage('Email Notification') {
            steps {
                 emailext body: '''"""<p>SUCCESSFUL: Job \'${env.JOB_NAME} [${env.BUILD_NUMBER}]\':</p>
        <p>Check console output at &QUOT;<a href=\'${env.BUILD_URL}\'>${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>&QUOT;</p>""",''', recipientProviders: [developers()], subject: 'SUCCESSFUL: Job \'${env.JOB_NAME} [${env.BUILD_NUMBER}]\'', to: 'bhagyashreeshirodkar@gmail.com'
             }
         }
    }
}
